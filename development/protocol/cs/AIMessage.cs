// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AIMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AIMessage {

  /// <summary>Holder for reflection information generated from AIMessage.proto</summary>
  public static partial class AIMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for AIMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AIMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9BSU1lc3NhZ2UucHJvdG8SCUFJTWVzc2FnZRoZU3RydWN0L0NvbW1vblN0",
            "cnVjdC5wcm90byJiCg9Db25kaXRpb25PYmplY3QSEwoLc3ViamVjdFR5cGUY",
            "ASABKAUSEgoKc3ViamVjdEluZBgCIAEoBRISCgpzdGF0dXNUeXBlGAMgASgF",
            "EhIKCnBhcmFtZXRlcnMYBCADKAUiSQoMQWN0aW9uT2JqZWN0EhIKCmFjdGlv",
            "blR5cGUYASABKAUSEgoKdGFyZ2V0VHlwZRgCIAEoBRIRCgl0YXJnZXRJbmQY",
            "AyABKAUiiAEKDENsYXVzZU9iamVjdBISCgpjbGF1c2VUeXBlGAEgASgFEi8K",
            "CWNvbmRpdGlvbhgCIAEoCzIaLkFJTWVzc2FnZS5Db25kaXRpb25PYmplY3RI",
            "ABIpCgZhY3Rpb24YAyABKAsyFy5BSU1lc3NhZ2UuQWN0aW9uT2JqZWN0SABC",
            "CAoGY2xhdXNlIjsKDlNlbnRlbmNlT2JqZWN0EikKCHNlbnRlbmNlGAEgAygL",
            "MhcuQUlNZXNzYWdlLkNsYXVzZU9iamVjdCJeChZHZXRCZWhhdmlvclRyZWVS",
            "ZXF1ZXN0EgsKA3JpZBgBIAEoBRILCgNlaWQYAiABKAUSKgoHcHJvZ3JhbRgD",
            "IAMoCzIZLkFJTWVzc2FnZS5TZW50ZW5jZU9iamVjdCI2ChdHZXRCZWhhdmlv",
            "clRyZWVSZXNwb25zZRIOCgZyZXN1bHQYASABKAUSCwoDZWlkGAIgASgFIk4K",
            "EVJvYm90TW92ZVJlc3BvbnNlEgsKA2VpZBgBIAEoBRIsCgp3YXlfcG9pbnRz",
            "GAIgAygLMhguQ29tbW9uU3RydWN0Lk5ldFZlY3RvcjMiRQoTUm9ib3RBdHRh",
            "Y2tSZXNwb25zZRILCgNlaWQYASABKAUSDAoEbGVmdBgCIAEoCBITCgt0YXJn",
            "ZXRzX2VpZBgDIAMoBSJmChdSb2JvdFRha2VEYW1hZ2VSZXNwb25zZRILCgNl",
            "aWQYASABKAUSLQoLZGFtYWdlX2luZm8YAiABKAsyGC5Db21tb25TdHJ1Y3Qu",
            "RGFtYWdlSW5mbxIPCgdpc19kZWFkGAMgASgIKnEKCXByb3RvX2lkcxIPCgtF",
            "TVBUWV9QUk9UTxAAEhEKDVJPQk9UX1NFUlZJQ0UQBBIVChFHRVRfQkVIQVZJ",
            "T1JfVFJFRRABEggKBE1PVkUQAhIKCgZBVFRBQ0sQAxIPCgtUQUtFX0RBTUFH",
            "RRAEGgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CommonStruct.CommonStructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AIMessage.proto_ids), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.ConditionObject), global::AIMessage.ConditionObject.Parser, new[]{ "SubjectType", "SubjectInd", "StatusType", "Parameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.ActionObject), global::AIMessage.ActionObject.Parser, new[]{ "ActionType", "TargetType", "TargetInd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.ClauseObject), global::AIMessage.ClauseObject.Parser, new[]{ "ClauseType", "Condition", "Action" }, new[]{ "Clause" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.SentenceObject), global::AIMessage.SentenceObject.Parser, new[]{ "Sentence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.GetBehaviorTreeRequest), global::AIMessage.GetBehaviorTreeRequest.Parser, new[]{ "Rid", "Eid", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.GetBehaviorTreeResponse), global::AIMessage.GetBehaviorTreeResponse.Parser, new[]{ "Result", "Eid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.RobotMoveResponse), global::AIMessage.RobotMoveResponse.Parser, new[]{ "Eid", "WayPoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.RobotAttackResponse), global::AIMessage.RobotAttackResponse.Parser, new[]{ "Eid", "Left", "TargetsEid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AIMessage.RobotTakeDamageResponse), global::AIMessage.RobotTakeDamageResponse.Parser, new[]{ "Eid", "DamageInfo", "IsDead" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum proto_ids {
    [pbr::OriginalName("EMPTY_PROTO")] EmptyProto = 0,
    /// <summary>
    /// service id
    /// </summary>
    [pbr::OriginalName("ROBOT_SERVICE")] RobotService = 4,
    /// <summary>
    /// command id
    /// </summary>
    [pbr::OriginalName("GET_BEHAVIOR_TREE")] GetBehaviorTree = 1,
    [pbr::OriginalName("MOVE")] Move = 2,
    [pbr::OriginalName("ATTACK")] Attack = 3,
    [pbr::OriginalName("TAKE_DAMAGE", PreferredAlias = false)] TakeDamage = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ConditionObject : pb::IMessage<ConditionObject> {
    private static readonly pb::MessageParser<ConditionObject> _parser = new pb::MessageParser<ConditionObject>(() => new ConditionObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConditionObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConditionObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConditionObject(ConditionObject other) : this() {
      subjectType_ = other.subjectType_;
      subjectInd_ = other.subjectInd_;
      statusType_ = other.statusType_;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConditionObject Clone() {
      return new ConditionObject(this);
    }

    /// <summary>Field number for the "subjectType" field.</summary>
    public const int SubjectTypeFieldNumber = 1;
    private int subjectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubjectType {
      get { return subjectType_; }
      set {
        subjectType_ = value;
      }
    }

    /// <summary>Field number for the "subjectInd" field.</summary>
    public const int SubjectIndFieldNumber = 2;
    private int subjectInd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubjectInd {
      get { return subjectInd_; }
      set {
        subjectInd_ = value;
      }
    }

    /// <summary>Field number for the "statusType" field.</summary>
    public const int StatusTypeFieldNumber = 3;
    private int statusType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StatusType {
      get { return statusType_; }
      set {
        statusType_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_parameters_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> parameters_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// oneof parameters 
    /// {
    ///     int32 parameter = 4;
    ///     ParametersObject parameterList = 5;
    /// }
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConditionObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConditionObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectType != other.SubjectType) return false;
      if (SubjectInd != other.SubjectInd) return false;
      if (StatusType != other.StatusType) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubjectType != 0) hash ^= SubjectType.GetHashCode();
      if (SubjectInd != 0) hash ^= SubjectInd.GetHashCode();
      if (StatusType != 0) hash ^= StatusType.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubjectType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubjectType);
      }
      if (SubjectInd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubjectInd);
      }
      if (StatusType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StatusType);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubjectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubjectType);
      }
      if (SubjectInd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubjectInd);
      }
      if (StatusType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusType);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConditionObject other) {
      if (other == null) {
        return;
      }
      if (other.SubjectType != 0) {
        SubjectType = other.SubjectType;
      }
      if (other.SubjectInd != 0) {
        SubjectInd = other.SubjectInd;
      }
      if (other.StatusType != 0) {
        StatusType = other.StatusType;
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubjectType = input.ReadInt32();
            break;
          }
          case 16: {
            SubjectInd = input.ReadInt32();
            break;
          }
          case 24: {
            StatusType = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActionObject : pb::IMessage<ActionObject> {
    private static readonly pb::MessageParser<ActionObject> _parser = new pb::MessageParser<ActionObject>(() => new ActionObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObject(ActionObject other) : this() {
      actionType_ = other.actionType_;
      targetType_ = other.targetType_;
      targetInd_ = other.targetInd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObject Clone() {
      return new ActionObject(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private int actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "targetType" field.</summary>
    public const int TargetTypeFieldNumber = 2;
    private int targetType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "targetInd" field.</summary>
    public const int TargetIndFieldNumber = 3;
    private int targetInd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetInd {
      get { return targetInd_; }
      set {
        targetInd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (TargetType != other.TargetType) return false;
      if (TargetInd != other.TargetInd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (TargetType != 0) hash ^= TargetType.GetHashCode();
      if (TargetInd != 0) hash ^= TargetInd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ActionType);
      }
      if (TargetType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetType);
      }
      if (TargetInd != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TargetInd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (TargetType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetType);
      }
      if (TargetInd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetInd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionObject other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.TargetType != 0) {
        TargetType = other.TargetType;
      }
      if (other.TargetInd != 0) {
        TargetInd = other.TargetInd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadInt32();
            break;
          }
          case 16: {
            TargetType = input.ReadInt32();
            break;
          }
          case 24: {
            TargetInd = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClauseObject : pb::IMessage<ClauseObject> {
    private static readonly pb::MessageParser<ClauseObject> _parser = new pb::MessageParser<ClauseObject>(() => new ClauseObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClauseObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClauseObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClauseObject(ClauseObject other) : this() {
      clauseType_ = other.clauseType_;
      switch (other.ClauseCase) {
        case ClauseOneofCase.Condition:
          Condition = other.Condition.Clone();
          break;
        case ClauseOneofCase.Action:
          Action = other.Action.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClauseObject Clone() {
      return new ClauseObject(this);
    }

    /// <summary>Field number for the "clauseType" field.</summary>
    public const int ClauseTypeFieldNumber = 1;
    private int clauseType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClauseType {
      get { return clauseType_; }
      set {
        clauseType_ = value;
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AIMessage.ConditionObject Condition {
      get { return clauseCase_ == ClauseOneofCase.Condition ? (global::AIMessage.ConditionObject) clause_ : null; }
      set {
        clause_ = value;
        clauseCase_ = value == null ? ClauseOneofCase.None : ClauseOneofCase.Condition;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AIMessage.ActionObject Action {
      get { return clauseCase_ == ClauseOneofCase.Action ? (global::AIMessage.ActionObject) clause_ : null; }
      set {
        clause_ = value;
        clauseCase_ = value == null ? ClauseOneofCase.None : ClauseOneofCase.Action;
      }
    }

    private object clause_;
    /// <summary>Enum of possible cases for the "clause" oneof.</summary>
    public enum ClauseOneofCase {
      None = 0,
      Condition = 2,
      Action = 3,
    }
    private ClauseOneofCase clauseCase_ = ClauseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClauseOneofCase ClauseCase {
      get { return clauseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClause() {
      clauseCase_ = ClauseOneofCase.None;
      clause_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClauseObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClauseObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClauseType != other.ClauseType) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(Action, other.Action)) return false;
      if (ClauseCase != other.ClauseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClauseType != 0) hash ^= ClauseType.GetHashCode();
      if (clauseCase_ == ClauseOneofCase.Condition) hash ^= Condition.GetHashCode();
      if (clauseCase_ == ClauseOneofCase.Action) hash ^= Action.GetHashCode();
      hash ^= (int) clauseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClauseType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClauseType);
      }
      if (clauseCase_ == ClauseOneofCase.Condition) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      if (clauseCase_ == ClauseOneofCase.Action) {
        output.WriteRawTag(26);
        output.WriteMessage(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClauseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClauseType);
      }
      if (clauseCase_ == ClauseOneofCase.Condition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (clauseCase_ == ClauseOneofCase.Action) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClauseObject other) {
      if (other == null) {
        return;
      }
      if (other.ClauseType != 0) {
        ClauseType = other.ClauseType;
      }
      switch (other.ClauseCase) {
        case ClauseOneofCase.Condition:
          if (Condition == null) {
            Condition = new global::AIMessage.ConditionObject();
          }
          Condition.MergeFrom(other.Condition);
          break;
        case ClauseOneofCase.Action:
          if (Action == null) {
            Action = new global::AIMessage.ActionObject();
          }
          Action.MergeFrom(other.Action);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClauseType = input.ReadInt32();
            break;
          }
          case 18: {
            global::AIMessage.ConditionObject subBuilder = new global::AIMessage.ConditionObject();
            if (clauseCase_ == ClauseOneofCase.Condition) {
              subBuilder.MergeFrom(Condition);
            }
            input.ReadMessage(subBuilder);
            Condition = subBuilder;
            break;
          }
          case 26: {
            global::AIMessage.ActionObject subBuilder = new global::AIMessage.ActionObject();
            if (clauseCase_ == ClauseOneofCase.Action) {
              subBuilder.MergeFrom(Action);
            }
            input.ReadMessage(subBuilder);
            Action = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class SentenceObject : pb::IMessage<SentenceObject> {
    private static readonly pb::MessageParser<SentenceObject> _parser = new pb::MessageParser<SentenceObject>(() => new SentenceObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SentenceObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentenceObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentenceObject(SentenceObject other) : this() {
      sentence_ = other.sentence_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentenceObject Clone() {
      return new SentenceObject(this);
    }

    /// <summary>Field number for the "sentence" field.</summary>
    public const int SentenceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AIMessage.ClauseObject> _repeated_sentence_codec
        = pb::FieldCodec.ForMessage(10, global::AIMessage.ClauseObject.Parser);
    private readonly pbc::RepeatedField<global::AIMessage.ClauseObject> sentence_ = new pbc::RepeatedField<global::AIMessage.ClauseObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AIMessage.ClauseObject> Sentence {
      get { return sentence_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SentenceObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SentenceObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sentence_.Equals(other.sentence_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sentence_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sentence_.WriteTo(output, _repeated_sentence_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sentence_.CalculateSize(_repeated_sentence_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SentenceObject other) {
      if (other == null) {
        return;
      }
      sentence_.Add(other.sentence_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sentence_.AddEntriesFrom(input, _repeated_sentence_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBehaviorTreeRequest : pb::IMessage<GetBehaviorTreeRequest> {
    private static readonly pb::MessageParser<GetBehaviorTreeRequest> _parser = new pb::MessageParser<GetBehaviorTreeRequest>(() => new GetBehaviorTreeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBehaviorTreeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeRequest(GetBehaviorTreeRequest other) : this() {
      rid_ = other.rid_;
      eid_ = other.eid_;
      program_ = other.program_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeRequest Clone() {
      return new GetBehaviorTreeRequest(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 3;
    private static readonly pb::FieldCodec<global::AIMessage.SentenceObject> _repeated_program_codec
        = pb::FieldCodec.ForMessage(26, global::AIMessage.SentenceObject.Parser);
    private readonly pbc::RepeatedField<global::AIMessage.SentenceObject> program_ = new pbc::RepeatedField<global::AIMessage.SentenceObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::AIMessage.SentenceObject> Program {
      get { return program_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBehaviorTreeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBehaviorTreeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Eid != other.Eid) return false;
      if(!program_.Equals(other.program_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      hash ^= program_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      program_.WriteTo(output, _repeated_program_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      size += program_.CalculateSize(_repeated_program_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBehaviorTreeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      program_.Add(other.program_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
          case 26: {
            program_.AddEntriesFrom(input, _repeated_program_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBehaviorTreeResponse : pb::IMessage<GetBehaviorTreeResponse> {
    private static readonly pb::MessageParser<GetBehaviorTreeResponse> _parser = new pb::MessageParser<GetBehaviorTreeResponse>(() => new GetBehaviorTreeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBehaviorTreeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeResponse(GetBehaviorTreeResponse other) : this() {
      result_ = other.result_;
      eid_ = other.eid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBehaviorTreeResponse Clone() {
      return new GetBehaviorTreeResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBehaviorTreeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBehaviorTreeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Eid != other.Eid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBehaviorTreeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 8.23 新增
  /// </summary>
  public sealed partial class RobotMoveResponse : pb::IMessage<RobotMoveResponse> {
    private static readonly pb::MessageParser<RobotMoveResponse> _parser = new pb::MessageParser<RobotMoveResponse>(() => new RobotMoveResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotMoveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse(RobotMoveResponse other) : this() {
      eid_ = other.eid_;
      wayPoints_ = other.wayPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse Clone() {
      return new RobotMoveResponse(this);
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 1;
    private int eid_;
    /// <summary>
    /// 机器人eid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "way_points" field.</summary>
    public const int WayPointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CommonStruct.NetVector3> _repeated_wayPoints_codec
        = pb::FieldCodec.ForMessage(18, global::CommonStruct.NetVector3.Parser);
    private readonly pbc::RepeatedField<global::CommonStruct.NetVector3> wayPoints_ = new pbc::RepeatedField<global::CommonStruct.NetVector3>();
    /// <summary>
    /// 路点列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CommonStruct.NetVector3> WayPoints {
      get { return wayPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotMoveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotMoveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eid != other.Eid) return false;
      if(!wayPoints_.Equals(other.wayPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Eid != 0) hash ^= Eid.GetHashCode();
      hash ^= wayPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Eid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eid);
      }
      wayPoints_.WriteTo(output, _repeated_wayPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      size += wayPoints_.CalculateSize(_repeated_wayPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotMoveResponse other) {
      if (other == null) {
        return;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      wayPoints_.Add(other.wayPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eid = input.ReadInt32();
            break;
          }
          case 18: {
            wayPoints_.AddEntriesFrom(input, _repeated_wayPoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotAttackResponse : pb::IMessage<RobotAttackResponse> {
    private static readonly pb::MessageParser<RobotAttackResponse> _parser = new pb::MessageParser<RobotAttackResponse>(() => new RobotAttackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotAttackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotAttackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotAttackResponse(RobotAttackResponse other) : this() {
      eid_ = other.eid_;
      left_ = other.left_;
      targetsEid_ = other.targetsEid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotAttackResponse Clone() {
      return new RobotAttackResponse(this);
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 1;
    private int eid_;
    /// <summary>
    /// 攻击的机器人eid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private bool left_;
    /// <summary>
    /// 所使用的手
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "targets_eid" field.</summary>
    public const int TargetsEidFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_targetsEid_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> targetsEid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 攻击目标eid列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TargetsEid {
      get { return targetsEid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotAttackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotAttackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eid != other.Eid) return false;
      if (Left != other.Left) return false;
      if(!targetsEid_.Equals(other.targetsEid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (Left != false) hash ^= Left.GetHashCode();
      hash ^= targetsEid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Eid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eid);
      }
      if (Left != false) {
        output.WriteRawTag(16);
        output.WriteBool(Left);
      }
      targetsEid_.WriteTo(output, _repeated_targetsEid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (Left != false) {
        size += 1 + 1;
      }
      size += targetsEid_.CalculateSize(_repeated_targetsEid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotAttackResponse other) {
      if (other == null) {
        return;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      if (other.Left != false) {
        Left = other.Left;
      }
      targetsEid_.Add(other.targetsEid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eid = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            targetsEid_.AddEntriesFrom(input, _repeated_targetsEid_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotTakeDamageResponse : pb::IMessage<RobotTakeDamageResponse> {
    private static readonly pb::MessageParser<RobotTakeDamageResponse> _parser = new pb::MessageParser<RobotTakeDamageResponse>(() => new RobotTakeDamageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotTakeDamageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AIMessage.AIMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTakeDamageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTakeDamageResponse(RobotTakeDamageResponse other) : this() {
      eid_ = other.eid_;
      damageInfo_ = other.damageInfo_ != null ? other.damageInfo_.Clone() : null;
      isDead_ = other.isDead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotTakeDamageResponse Clone() {
      return new RobotTakeDamageResponse(this);
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 1;
    private int eid_;
    /// <summary>
    /// 受伤机器人eid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "damage_info" field.</summary>
    public const int DamageInfoFieldNumber = 2;
    private global::CommonStruct.DamageInfo damageInfo_;
    /// <summary>
    /// 伤害信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommonStruct.DamageInfo DamageInfo {
      get { return damageInfo_; }
      set {
        damageInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_dead" field.</summary>
    public const int IsDeadFieldNumber = 3;
    private bool isDead_;
    /// <summary>
    /// 受伤完是否死亡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDead {
      get { return isDead_; }
      set {
        isDead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotTakeDamageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotTakeDamageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eid != other.Eid) return false;
      if (!object.Equals(DamageInfo, other.DamageInfo)) return false;
      if (IsDead != other.IsDead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (damageInfo_ != null) hash ^= DamageInfo.GetHashCode();
      if (IsDead != false) hash ^= IsDead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Eid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Eid);
      }
      if (damageInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DamageInfo);
      }
      if (IsDead != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsDead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (damageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DamageInfo);
      }
      if (IsDead != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotTakeDamageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      if (other.damageInfo_ != null) {
        if (damageInfo_ == null) {
          DamageInfo = new global::CommonStruct.DamageInfo();
        }
        DamageInfo.MergeFrom(other.DamageInfo);
      }
      if (other.IsDead != false) {
        IsDead = other.IsDead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eid = input.ReadInt32();
            break;
          }
          case 18: {
            if (damageInfo_ == null) {
              DamageInfo = new global::CommonStruct.DamageInfo();
            }
            input.ReadMessage(DamageInfo);
            break;
          }
          case 24: {
            IsDead = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
