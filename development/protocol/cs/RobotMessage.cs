// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RobotMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RobotMessage {

  /// <summary>Holder for reflection information generated from RobotMessage.proto</summary>
  public static partial class RobotMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for RobotMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RobotMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJSb2JvdE1lc3NhZ2UucHJvdG8SDFJvYm90TWVzc2FnZRoZU3RydWN0L0Nv",
            "bW1vblN0cnVjdC5wcm90byKBAQoRUm9ib3RNb3ZlUmVzcG9uc2USDgoGcmVz",
            "dWx0GAEgASgFEgsKA2VpZBgCIAEoBRIlCgNwb3MYAyABKAsyGC5Db21tb25T",
            "dHJ1Y3QuTmV0VmVjdG9yMxIoCgNyb3QYBCABKAsyGy5Db21tb25TdHJ1Y3Qu",
            "TmV0UXVhdGVybmlvbiIxChJMZWZ0QXR0YWNrUmVzcG9uc2USDgoGcmVzdWx0",
            "GAEgASgFEgsKA2VpZBgCIAEoBSIyChNSaWdodEF0dGFja1Jlc3BvbnNlEg4K",
            "BnJlc3VsdBgBIAEoBRILCgNlaWQYAiABKAUiUwoMSHVydFJlc3BvbnNlEg4K",
            "BnJlc3VsdBgBIAEoBRILCgNlaWQYAiABKAUSJgoEaW5mbxgDIAEoCzIYLkNv",
            "bW1vblN0cnVjdC5EYW1hZ2VJbmZvKmsKCXByb3RvX2lkcxIPCgtFTVBUWV9Q",
            "Uk9UTxAAEhIKDlBMQVlFUl9TRVJWSUNFEAMSCAoETU9WRRABEg8KC0xFRlRf",
            "QVRUQUNLEAISEAoMUklHSFRfQVRUQUNLEAMSCAoESFVSVBAEGgIQAWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CommonStruct.CommonStructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RobotMessage.proto_ids), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RobotMessage.RobotMoveResponse), global::RobotMessage.RobotMoveResponse.Parser, new[]{ "Result", "Eid", "Pos", "Rot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RobotMessage.LeftAttackResponse), global::RobotMessage.LeftAttackResponse.Parser, new[]{ "Result", "Eid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RobotMessage.RightAttackResponse), global::RobotMessage.RightAttackResponse.Parser, new[]{ "Result", "Eid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RobotMessage.HurtResponse), global::RobotMessage.HurtResponse.Parser, new[]{ "Result", "Eid", "Info" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum proto_ids {
    [pbr::OriginalName("EMPTY_PROTO")] EmptyProto = 0,
    /// <summary>
    /// service id
    /// </summary>
    [pbr::OriginalName("PLAYER_SERVICE")] PlayerService = 3,
    /// <summary>
    /// command id
    /// </summary>
    [pbr::OriginalName("MOVE")] Move = 1,
    [pbr::OriginalName("LEFT_ATTACK")] LeftAttack = 2,
    [pbr::OriginalName("RIGHT_ATTACK", PreferredAlias = false)] RightAttack = 3,
    [pbr::OriginalName("HURT")] Hurt = 4,
  }

  #endregion

  #region Messages
  public sealed partial class RobotMoveResponse : pb::IMessage<RobotMoveResponse> {
    private static readonly pb::MessageParser<RobotMoveResponse> _parser = new pb::MessageParser<RobotMoveResponse>(() => new RobotMoveResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotMoveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RobotMessage.RobotMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse(RobotMoveResponse other) : this() {
      result_ = other.result_;
      eid_ = other.eid_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      rot_ = other.rot_ != null ? other.rot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotMoveResponse Clone() {
      return new RobotMoveResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::CommonStruct.NetVector3 pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommonStruct.NetVector3 Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "rot" field.</summary>
    public const int RotFieldNumber = 4;
    private global::CommonStruct.NetQuaternion rot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommonStruct.NetQuaternion Rot {
      get { return rot_; }
      set {
        rot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotMoveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotMoveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Eid != other.Eid) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(Rot, other.Rot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (rot_ != null) hash ^= Rot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (rot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (rot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotMoveResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::CommonStruct.NetVector3();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.rot_ != null) {
        if (rot_ == null) {
          Rot = new global::CommonStruct.NetQuaternion();
        }
        Rot.MergeFrom(other.Rot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::CommonStruct.NetVector3();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 34: {
            if (rot_ == null) {
              Rot = new global::CommonStruct.NetQuaternion();
            }
            input.ReadMessage(Rot);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeftAttackResponse : pb::IMessage<LeftAttackResponse> {
    private static readonly pb::MessageParser<LeftAttackResponse> _parser = new pb::MessageParser<LeftAttackResponse>(() => new LeftAttackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeftAttackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RobotMessage.RobotMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftAttackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftAttackResponse(LeftAttackResponse other) : this() {
      result_ = other.result_;
      eid_ = other.eid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeftAttackResponse Clone() {
      return new LeftAttackResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeftAttackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeftAttackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Eid != other.Eid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeftAttackResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RightAttackResponse : pb::IMessage<RightAttackResponse> {
    private static readonly pb::MessageParser<RightAttackResponse> _parser = new pb::MessageParser<RightAttackResponse>(() => new RightAttackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RightAttackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RobotMessage.RobotMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RightAttackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RightAttackResponse(RightAttackResponse other) : this() {
      result_ = other.result_;
      eid_ = other.eid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RightAttackResponse Clone() {
      return new RightAttackResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RightAttackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RightAttackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Eid != other.Eid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RightAttackResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HurtResponse : pb::IMessage<HurtResponse> {
    private static readonly pb::MessageParser<HurtResponse> _parser = new pb::MessageParser<HurtResponse>(() => new HurtResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HurtResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RobotMessage.RobotMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HurtResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HurtResponse(HurtResponse other) : this() {
      result_ = other.result_;
      eid_ = other.eid_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HurtResponse Clone() {
      return new HurtResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "eid" field.</summary>
    public const int EidFieldNumber = 2;
    private int eid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eid {
      get { return eid_; }
      set {
        eid_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private global::CommonStruct.DamageInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CommonStruct.DamageInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HurtResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HurtResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Eid != other.Eid) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Eid != 0) hash ^= Eid.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Eid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Eid);
      }
      if (info_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Eid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eid);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HurtResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Eid != 0) {
        Eid = other.Eid;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::CommonStruct.DamageInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Eid = input.ReadInt32();
            break;
          }
          case 26: {
            if (info_ == null) {
              Info = new global::CommonStruct.DamageInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
