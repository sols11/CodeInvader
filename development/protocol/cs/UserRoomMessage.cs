// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UserRoomMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserRoomMessage {

  /// <summary>Holder for reflection information generated from UserRoomMessage.proto</summary>
  public static partial class UserRoomMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for UserRoomMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserRoomMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVVc2VyUm9vbU1lc3NhZ2UucHJvdG8SD1VzZXJSb29tTWVzc2FnZSJACgpV",
            "c2VyT2JqZWN0EgsKA3VpZBgBIAEoBRILCgNoaWQYAiABKAUSCwoDcmlkGAMg",
            "ASgFEgsKA2dpZBgEIAEoBSJkCgpSb29tT2JqZWN0EgsKA3JpZBgBIAEoBRIM",
            "CgRuYW1lGAIgASgJEgsKA2dpZBgDIAEoBRIuCgl1c2Vyc19sc3QYBCADKAsy",
            "Gy5Vc2VyUm9vbU1lc3NhZ2UuVXNlck9iamVjdCIpCg1BZGRyZXNzT2JqZWN0",
            "EgoKAmlwGAEgASgJEgwKBHBvcnQYAiABKAUiNgoUVXNlckJ1aWxkUm9vbVJl",
            "cXVlc3QSCwoDdWlkGAEgASgFEhEKCXJvb21fbmFtZRgCIAEoCSJaChVVc2Vy",
            "QnVpbGRSb29tUmVzcG9uc2USDgoGcmVzdWx0GAEgASgFEjEKDG5ld19yb29t",
            "X29iahgCIAEoCzIbLlVzZXJSb29tTWVzc2FnZS5Sb29tT2JqZWN0IjAKFFVz",
            "ZXJFbnRlclJvb21SZXF1ZXN0EgsKA3JpZBgBIAEoBRILCgN1aWQYAiABKAUi",
            "XAoVVXNlckVudGVyUm9vbVJlc3BvbnNlEg4KBnJlc3VsdBgBIAEoBRIzCg5l",
            "bnRlcl9yb29tX29iahgCIAEoCzIbLlVzZXJSb29tTWVzc2FnZS5Sb29tT2Jq",
            "ZWN0Ii8KE1VzZXJFeGl0Um9vbVJlcXVlc3QSCwoDcmlkGAEgASgFEgsKA3Vp",
            "ZBgCIAEoBSJaChRVc2VyRXhpdFJvb21SZXNwb25zZRIOCgZyZXN1bHQYASAB",
            "KAUSMgoNZXhpdF9yb29tX29iahgCIAEoCzIbLlVzZXJSb29tTWVzc2FnZS5S",
            "b29tT2JqZWN0IjAKFFVzZXJTdGFydEdhbWVSZXF1ZXN0EgsKA3JpZBgBIAEo",
            "BRILCgN1aWQYAiABKAUijQEKFVVzZXJTdGFydEdhbWVSZXNwb25zZRIOCgZy",
            "ZXN1bHQYASABKAUSMwoOc3RhcnRfcm9vbV9vYmoYAiABKAsyGy5Vc2VyUm9v",
            "bU1lc3NhZ2UuUm9vbU9iamVjdBIvCgdhZGRyZXNzGAMgASgLMh4uVXNlclJv",
            "b21NZXNzYWdlLkFkZHJlc3NPYmplY3QiHgoPR2V0Um9vbXNSZXF1ZXN0EgsK",
            "A3VpZBgBIAEoBSJVChBHZXRSb29tc1Jlc3BvbnNlEg4KBnJlc3VsdBgBIAEo",
            "BRIxCgxyb29tX29ial9sc3QYAiADKAsyGy5Vc2VyUm9vbU1lc3NhZ2UuUm9v",
            "bU9iamVjdCIvChNHZXRSb29tQnlSaWRSZXF1ZXN0EgsKA3JpZBgBIAEoBRIL",
            "CgN1aWQYAiABKAUiVQoUR2V0Um9vbUJ5UmlkUmVzcG9uc2USDgoGcmVzdWx0",
            "GAEgASgFEi0KCHJvb21fb2JqGAIgASgLMhsuVXNlclJvb21NZXNzYWdlLlJv",
            "b21PYmplY3QqrQEKCXByb3RvX2lkcxIPCgtFTVBUWV9QUk9UTxAAEhAKDFJP",
            "T01fU0VSVklDRRACEhIKDkNJRF9CVUlMRF9ST09NEAESEgoOQ0lEX0VOVEVS",
            "X1JPT00QAhIRCg1DSURfRVhJVF9ST09NEAMSEgoOQ0lEX1NUQVJUX0dBTUUQ",
            "BBIRCg1DSURfR0VUX1JPT01TEAUSFwoTQ0lEX0dFVF9ST09NX0JZX1JJRBAG",
            "GgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::UserRoomMessage.proto_ids), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserObject), global::UserRoomMessage.UserObject.Parser, new[]{ "Uid", "Hid", "Rid", "Gid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.RoomObject), global::UserRoomMessage.RoomObject.Parser, new[]{ "Rid", "Name", "Gid", "UsersLst" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.AddressObject), global::UserRoomMessage.AddressObject.Parser, new[]{ "Ip", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserBuildRoomRequest), global::UserRoomMessage.UserBuildRoomRequest.Parser, new[]{ "Uid", "RoomName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserBuildRoomResponse), global::UserRoomMessage.UserBuildRoomResponse.Parser, new[]{ "Result", "NewRoomObj" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserEnterRoomRequest), global::UserRoomMessage.UserEnterRoomRequest.Parser, new[]{ "Rid", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserEnterRoomResponse), global::UserRoomMessage.UserEnterRoomResponse.Parser, new[]{ "Result", "EnterRoomObj" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserExitRoomRequest), global::UserRoomMessage.UserExitRoomRequest.Parser, new[]{ "Rid", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserExitRoomResponse), global::UserRoomMessage.UserExitRoomResponse.Parser, new[]{ "Result", "ExitRoomObj" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserStartGameRequest), global::UserRoomMessage.UserStartGameRequest.Parser, new[]{ "Rid", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.UserStartGameResponse), global::UserRoomMessage.UserStartGameResponse.Parser, new[]{ "Result", "StartRoomObj", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.GetRoomsRequest), global::UserRoomMessage.GetRoomsRequest.Parser, new[]{ "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.GetRoomsResponse), global::UserRoomMessage.GetRoomsResponse.Parser, new[]{ "Result", "RoomObjLst" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.GetRoomByRidRequest), global::UserRoomMessage.GetRoomByRidRequest.Parser, new[]{ "Rid", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserRoomMessage.GetRoomByRidResponse), global::UserRoomMessage.GetRoomByRidResponse.Parser, new[]{ "Result", "RoomObj" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum proto_ids {
    [pbr::OriginalName("EMPTY_PROTO")] EmptyProto = 0,
    /// <summary>
    /// service id
    /// </summary>
    [pbr::OriginalName("ROOM_SERVICE")] RoomService = 2,
    /// <summary>
    /// command id
    /// </summary>
    [pbr::OriginalName("CID_BUILD_ROOM")] CidBuildRoom = 1,
    [pbr::OriginalName("CID_ENTER_ROOM", PreferredAlias = false)] CidEnterRoom = 2,
    [pbr::OriginalName("CID_EXIT_ROOM")] CidExitRoom = 3,
    [pbr::OriginalName("CID_START_GAME")] CidStartGame = 4,
    [pbr::OriginalName("CID_GET_ROOMS")] CidGetRooms = 5,
    [pbr::OriginalName("CID_GET_ROOM_BY_RID")] CidGetRoomByRid = 6,
  }

  #endregion

  #region Messages
  public sealed partial class UserObject : pb::IMessage<UserObject> {
    private static readonly pb::MessageParser<UserObject> _parser = new pb::MessageParser<UserObject>(() => new UserObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserObject(UserObject other) : this() {
      uid_ = other.uid_;
      hid_ = other.hid_;
      rid_ = other.rid_;
      gid_ = other.gid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserObject Clone() {
      return new UserObject(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "hid" field.</summary>
    public const int HidFieldNumber = 2;
    private int hid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hid {
      get { return hid_; }
      set {
        hid_ = value;
      }
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 3;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 4;
    private int gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Hid != other.Hid) return false;
      if (Rid != other.Rid) return false;
      if (Gid != other.Gid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (Hid != 0) hash ^= Hid.GetHashCode();
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Gid != 0) hash ^= Gid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (Hid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Hid);
      }
      if (Rid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Rid);
      }
      if (Gid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (Hid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hid);
      }
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Gid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserObject other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.Hid != 0) {
        Hid = other.Hid;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Gid != 0) {
        Gid = other.Gid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Hid = input.ReadInt32();
            break;
          }
          case 24: {
            Rid = input.ReadInt32();
            break;
          }
          case 32: {
            Gid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomObject : pb::IMessage<RoomObject> {
    private static readonly pb::MessageParser<RoomObject> _parser = new pb::MessageParser<RoomObject>(() => new RoomObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomObject(RoomObject other) : this() {
      rid_ = other.rid_;
      name_ = other.name_;
      gid_ = other.gid_;
      usersLst_ = other.usersLst_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomObject Clone() {
      return new RoomObject(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 3;
    private int gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "users_lst" field.</summary>
    public const int UsersLstFieldNumber = 4;
    private static readonly pb::FieldCodec<global::UserRoomMessage.UserObject> _repeated_usersLst_codec
        = pb::FieldCodec.ForMessage(34, global::UserRoomMessage.UserObject.Parser);
    private readonly pbc::RepeatedField<global::UserRoomMessage.UserObject> usersLst_ = new pbc::RepeatedField<global::UserRoomMessage.UserObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserRoomMessage.UserObject> UsersLst {
      get { return usersLst_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Name != other.Name) return false;
      if (Gid != other.Gid) return false;
      if(!usersLst_.Equals(other.usersLst_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gid != 0) hash ^= Gid.GetHashCode();
      hash ^= usersLst_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Gid);
      }
      usersLst_.WriteTo(output, _repeated_usersLst_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gid);
      }
      size += usersLst_.CalculateSize(_repeated_usersLst_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomObject other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gid != 0) {
        Gid = other.Gid;
      }
      usersLst_.Add(other.usersLst_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Gid = input.ReadInt32();
            break;
          }
          case 34: {
            usersLst_.AddEntriesFrom(input, _repeated_usersLst_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressObject : pb::IMessage<AddressObject> {
    private static readonly pb::MessageParser<AddressObject> _parser = new pb::MessageParser<AddressObject>(() => new AddressObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressObject(AddressObject other) : this() {
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressObject Clone() {
      return new AddressObject(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressObject other) {
      if (other == null) {
        return;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// broadcast
  /// </summary>
  public sealed partial class UserBuildRoomRequest : pb::IMessage<UserBuildRoomRequest> {
    private static readonly pb::MessageParser<UserBuildRoomRequest> _parser = new pb::MessageParser<UserBuildRoomRequest>(() => new UserBuildRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserBuildRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomRequest(UserBuildRoomRequest other) : this() {
      uid_ = other.uid_;
      roomName_ = other.roomName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomRequest Clone() {
      return new UserBuildRoomRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private string roomName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserBuildRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserBuildRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (RoomName != other.RoomName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserBuildRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserBuildRoomResponse : pb::IMessage<UserBuildRoomResponse> {
    private static readonly pb::MessageParser<UserBuildRoomResponse> _parser = new pb::MessageParser<UserBuildRoomResponse>(() => new UserBuildRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserBuildRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomResponse(UserBuildRoomResponse other) : this() {
      result_ = other.result_;
      newRoomObj_ = other.newRoomObj_ != null ? other.newRoomObj_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBuildRoomResponse Clone() {
      return new UserBuildRoomResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "new_room_obj" field.</summary>
    public const int NewRoomObjFieldNumber = 2;
    private global::UserRoomMessage.RoomObject newRoomObj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.RoomObject NewRoomObj {
      get { return newRoomObj_; }
      set {
        newRoomObj_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserBuildRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserBuildRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(NewRoomObj, other.NewRoomObj)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (newRoomObj_ != null) hash ^= NewRoomObj.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (newRoomObj_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewRoomObj);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (newRoomObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewRoomObj);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserBuildRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.newRoomObj_ != null) {
        if (newRoomObj_ == null) {
          NewRoomObj = new global::UserRoomMessage.RoomObject();
        }
        NewRoomObj.MergeFrom(other.NewRoomObj);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (newRoomObj_ == null) {
              NewRoomObj = new global::UserRoomMessage.RoomObject();
            }
            input.ReadMessage(NewRoomObj);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// broadcast
  /// </summary>
  public sealed partial class UserEnterRoomRequest : pb::IMessage<UserEnterRoomRequest> {
    private static readonly pb::MessageParser<UserEnterRoomRequest> _parser = new pb::MessageParser<UserEnterRoomRequest>(() => new UserEnterRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEnterRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest(UserEnterRoomRequest other) : this() {
      rid_ = other.rid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomRequest Clone() {
      return new UserEnterRoomRequest(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEnterRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEnterRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Uid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEnterRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserEnterRoomResponse : pb::IMessage<UserEnterRoomResponse> {
    private static readonly pb::MessageParser<UserEnterRoomResponse> _parser = new pb::MessageParser<UserEnterRoomResponse>(() => new UserEnterRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEnterRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse(UserEnterRoomResponse other) : this() {
      result_ = other.result_;
      enterRoomObj_ = other.enterRoomObj_ != null ? other.enterRoomObj_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEnterRoomResponse Clone() {
      return new UserEnterRoomResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "enter_room_obj" field.</summary>
    public const int EnterRoomObjFieldNumber = 2;
    private global::UserRoomMessage.RoomObject enterRoomObj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.RoomObject EnterRoomObj {
      get { return enterRoomObj_; }
      set {
        enterRoomObj_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEnterRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEnterRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(EnterRoomObj, other.EnterRoomObj)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (enterRoomObj_ != null) hash ^= EnterRoomObj.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (enterRoomObj_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnterRoomObj);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (enterRoomObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnterRoomObj);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEnterRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.enterRoomObj_ != null) {
        if (enterRoomObj_ == null) {
          EnterRoomObj = new global::UserRoomMessage.RoomObject();
        }
        EnterRoomObj.MergeFrom(other.EnterRoomObj);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (enterRoomObj_ == null) {
              EnterRoomObj = new global::UserRoomMessage.RoomObject();
            }
            input.ReadMessage(EnterRoomObj);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// broadcast
  /// </summary>
  public sealed partial class UserExitRoomRequest : pb::IMessage<UserExitRoomRequest> {
    private static readonly pb::MessageParser<UserExitRoomRequest> _parser = new pb::MessageParser<UserExitRoomRequest>(() => new UserExitRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserExitRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomRequest(UserExitRoomRequest other) : this() {
      rid_ = other.rid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomRequest Clone() {
      return new UserExitRoomRequest(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserExitRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserExitRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Uid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserExitRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserExitRoomResponse : pb::IMessage<UserExitRoomResponse> {
    private static readonly pb::MessageParser<UserExitRoomResponse> _parser = new pb::MessageParser<UserExitRoomResponse>(() => new UserExitRoomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserExitRoomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomResponse(UserExitRoomResponse other) : this() {
      result_ = other.result_;
      exitRoomObj_ = other.exitRoomObj_ != null ? other.exitRoomObj_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserExitRoomResponse Clone() {
      return new UserExitRoomResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "exit_room_obj" field.</summary>
    public const int ExitRoomObjFieldNumber = 2;
    private global::UserRoomMessage.RoomObject exitRoomObj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.RoomObject ExitRoomObj {
      get { return exitRoomObj_; }
      set {
        exitRoomObj_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserExitRoomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserExitRoomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ExitRoomObj, other.ExitRoomObj)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (exitRoomObj_ != null) hash ^= ExitRoomObj.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (exitRoomObj_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExitRoomObj);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (exitRoomObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExitRoomObj);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserExitRoomResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.exitRoomObj_ != null) {
        if (exitRoomObj_ == null) {
          ExitRoomObj = new global::UserRoomMessage.RoomObject();
        }
        ExitRoomObj.MergeFrom(other.ExitRoomObj);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (exitRoomObj_ == null) {
              ExitRoomObj = new global::UserRoomMessage.RoomObject();
            }
            input.ReadMessage(ExitRoomObj);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// broadcast
  /// </summary>
  public sealed partial class UserStartGameRequest : pb::IMessage<UserStartGameRequest> {
    private static readonly pb::MessageParser<UserStartGameRequest> _parser = new pb::MessageParser<UserStartGameRequest>(() => new UserStartGameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserStartGameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameRequest(UserStartGameRequest other) : this() {
      rid_ = other.rid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameRequest Clone() {
      return new UserStartGameRequest(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserStartGameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserStartGameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Uid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserStartGameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserStartGameResponse : pb::IMessage<UserStartGameResponse> {
    private static readonly pb::MessageParser<UserStartGameResponse> _parser = new pb::MessageParser<UserStartGameResponse>(() => new UserStartGameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserStartGameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameResponse(UserStartGameResponse other) : this() {
      result_ = other.result_;
      startRoomObj_ = other.startRoomObj_ != null ? other.startRoomObj_.Clone() : null;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserStartGameResponse Clone() {
      return new UserStartGameResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "start_room_obj" field.</summary>
    public const int StartRoomObjFieldNumber = 2;
    private global::UserRoomMessage.RoomObject startRoomObj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.RoomObject StartRoomObj {
      get { return startRoomObj_; }
      set {
        startRoomObj_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private global::UserRoomMessage.AddressObject address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.AddressObject Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserStartGameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserStartGameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(StartRoomObj, other.StartRoomObj)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (startRoomObj_ != null) hash ^= StartRoomObj.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (startRoomObj_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartRoomObj);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (startRoomObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartRoomObj);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserStartGameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.startRoomObj_ != null) {
        if (startRoomObj_ == null) {
          StartRoomObj = new global::UserRoomMessage.RoomObject();
        }
        StartRoomObj.MergeFrom(other.StartRoomObj);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::UserRoomMessage.AddressObject();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (startRoomObj_ == null) {
              StartRoomObj = new global::UserRoomMessage.RoomObject();
            }
            input.ReadMessage(StartRoomObj);
            break;
          }
          case 26: {
            if (address_ == null) {
              Address = new global::UserRoomMessage.AddressObject();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// sender
  /// </summary>
  public sealed partial class GetRoomsRequest : pb::IMessage<GetRoomsRequest> {
    private static readonly pb::MessageParser<GetRoomsRequest> _parser = new pb::MessageParser<GetRoomsRequest>(() => new GetRoomsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoomsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsRequest(GetRoomsRequest other) : this() {
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsRequest Clone() {
      return new GetRoomsRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoomsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoomsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoomsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRoomsResponse : pb::IMessage<GetRoomsResponse> {
    private static readonly pb::MessageParser<GetRoomsResponse> _parser = new pb::MessageParser<GetRoomsResponse>(() => new GetRoomsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoomsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsResponse(GetRoomsResponse other) : this() {
      result_ = other.result_;
      roomObjLst_ = other.roomObjLst_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomsResponse Clone() {
      return new GetRoomsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "room_obj_lst" field.</summary>
    public const int RoomObjLstFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserRoomMessage.RoomObject> _repeated_roomObjLst_codec
        = pb::FieldCodec.ForMessage(18, global::UserRoomMessage.RoomObject.Parser);
    private readonly pbc::RepeatedField<global::UserRoomMessage.RoomObject> roomObjLst_ = new pbc::RepeatedField<global::UserRoomMessage.RoomObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserRoomMessage.RoomObject> RoomObjLst {
      get { return roomObjLst_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoomsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoomsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!roomObjLst_.Equals(other.roomObjLst_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= roomObjLst_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      roomObjLst_.WriteTo(output, _repeated_roomObjLst_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += roomObjLst_.CalculateSize(_repeated_roomObjLst_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoomsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      roomObjLst_.Add(other.roomObjLst_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            roomObjLst_.AddEntriesFrom(input, _repeated_roomObjLst_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// sender
  /// </summary>
  public sealed partial class GetRoomByRidRequest : pb::IMessage<GetRoomByRidRequest> {
    private static readonly pb::MessageParser<GetRoomByRidRequest> _parser = new pb::MessageParser<GetRoomByRidRequest>(() => new GetRoomByRidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoomByRidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidRequest(GetRoomByRidRequest other) : this() {
      rid_ = other.rid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidRequest Clone() {
      return new GetRoomByRidRequest(this);
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 1;
    private int rid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rid {
      get { return rid_; }
      set {
        rid_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoomByRidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoomByRidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rid != other.Rid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rid != 0) hash ^= Rid.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Rid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rid);
      }
      if (Uid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rid);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoomByRidRequest other) {
      if (other == null) {
        return;
      }
      if (other.Rid != 0) {
        Rid = other.Rid;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRoomByRidResponse : pb::IMessage<GetRoomByRidResponse> {
    private static readonly pb::MessageParser<GetRoomByRidResponse> _parser = new pb::MessageParser<GetRoomByRidResponse>(() => new GetRoomByRidResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRoomByRidResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserRoomMessage.UserRoomMessageReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidResponse(GetRoomByRidResponse other) : this() {
      result_ = other.result_;
      roomObj_ = other.roomObj_ != null ? other.roomObj_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRoomByRidResponse Clone() {
      return new GetRoomByRidResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "room_obj" field.</summary>
    public const int RoomObjFieldNumber = 2;
    private global::UserRoomMessage.RoomObject roomObj_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::UserRoomMessage.RoomObject RoomObj {
      get { return roomObj_; }
      set {
        roomObj_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRoomByRidResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRoomByRidResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(RoomObj, other.RoomObj)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (roomObj_ != null) hash ^= RoomObj.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (roomObj_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomObj);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (roomObj_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomObj);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRoomByRidResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.roomObj_ != null) {
        if (roomObj_ == null) {
          RoomObj = new global::UserRoomMessage.RoomObject();
        }
        RoomObj.MergeFrom(other.RoomObj);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            if (roomObj_ == null) {
              RoomObj = new global::UserRoomMessage.RoomObject();
            }
            input.ReadMessage(RoomObj);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
